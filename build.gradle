//file:noinspection GroovyAssignabilityCheck
plugins {
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'com.rest.api.example'
version = '1.0.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // springs
    implementation 'org.springframework.boot:spring-boot-starter-web:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-webflux:2.5.4'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.4'
    implementation 'org.springframework.boot:spring-boot-configuration-processor:2.5.4'

    // MyBatis JPA,JDBC 使用時などは消してください
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
    implementation 'org.mybatis.scripting:mybatis-thymeleaf:1.0.1'

    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-io:commons-io:2.8.0'

    // devtools
    runtimeOnly 'org.springframework.boot:spring-boot-devtools:2.5.4'

    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql'

    // h2
    runtimeOnly 'com.h2database:h2:1.4.200'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.20'
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    // tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.5.4'
    testImplementation 'org.springframework.batch:spring-batch-test:4.3.3'
    testImplementation 'io.projectreactor:reactor-test:3.4.9'

    // MyBatis for Test
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3'

    // Mockito
    testImplementation 'org.mockito:mockito-core:3.4.3'
    testImplementation 'org.mockito:mockito-inline:3.4.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

tasks.withType(AbstractCompile)*.options*.encoding = tasks.withType(GroovyCompile)*.groovyOptions*.encoding = 'UTF-8'

// test
tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}

jacoco {
    toolVersion = "0.8.7"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir') as Directory
}

// jacocoのレポートから除外するクラスファイル。ここに除外したいクラスを列挙する
def coverageExcludeFiles = [
        '**/*$*.class',
        '**/*$*.java',
        '**/*$lambda$*.class',
        '**/dto/*',
        '**/entity/*',
        '**/*Exception.class'
]

// jacocoレポートの設定
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.enabled(true)
        // htmlレポート出力先
        html.outputLocation = layout.buildDirectory.dir('jacoco')
    }
    afterEvaluate {
        // ファイルの除外設定
        classDirectories.setFrom(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    excludes: coverageExcludeFiles)
        })
    }
}

